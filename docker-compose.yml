name: task-cli
services:
  # DB
  database:
    build:
      context: ./Database
      dockerfile: Dockerfile
    container_name: task-db
    environment:
      POSTGRES_DATABASE: postgres
      POSTGRES_HOST: task-db
      POSTGRES_PASSWORD: default
      POSTGRES_USER: postgres
      DATABASE_URL: "postgresql://postgres:default@task-db:5432/postgres"
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./Database/db/entrypoint:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
  # PGAdmin
  pgadmin:
    container_name: task-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@task.com
      PGADMIN_DEFAULT_PASSWORD: admin
    image: dpage/pgadmin4
    ports: [5050:80]
  # Backend
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    command: npm run ${CMD:-dev}
    container_name: task-api
    depends_on:
      database:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./Backend/
          target: app
          ignore: [node_modules]
    env_file:
      - ./Backend/.env
    volumes:
      - ./Backend/logs:/app/logs

    healthcheck:
      test: ["CMD-SHELL", "curl -v localhost:3000/api/health"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    ports:
      - 3000:3000
  #Frontend
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    command: npm run dev
    container_name: task-frontend
    depends_on:
      backend:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./Frontend
          target: /app
          ignore: [node_modules]
    environment:
      VITE_BACKEND_URL: http://localhost:3000/api
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5173 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    ports: [5173:5173]
volumes:
  db-data: {}
