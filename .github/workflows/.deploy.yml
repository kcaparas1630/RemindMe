name: OpenShift Sandbox Deployment
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    # Build Database image
    - name: Build Database image
      id: build-database-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ghcr.io/${{ github.repository_owner }}/${{ secrets.APP_NAME }}-database
        tags: ${{ env.IMAGE_TAGS }}
        dockerfiles: |
          ./Database/Dockerfile

    # Build Backend image
    - name: Build Backend image
      id: build-backend-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ghcr.io/${{ github.repository_owner }}/${{ secrets.APP_NAME }}-backend
        tags: ${{ env.IMAGE_TAGS }}
        dockerfiles: |
          ./Backend/Dockerfile
          
  push:
    # Push Database image
    - name: Push Database image to registry
      id: push-database-image
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-database-image.outputs.image }}
        tags: ${{ steps.build-database-image.outputs.tags }}
        registry: ${{ secrets.IMAGE_REGISTRY }}
        username: ${{ secrets.IMAGE_REGISTRY_USER }}
        password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
        extra-args: --format oci

    # Push Backend image
    - name: Push Backend image to registry
      id: push-backend-image
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-backend-image.outputs.image }}
        tags: ${{ steps.build-backend-image.outputs.tags }}
        registry: ${{ secrets.IMAGE_REGISTRY }}
        username: ${{ secrets.IMAGE_REGISTRY_USER }}
        password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
        extra-args: --format oci

  deploy:
    name: Deploy Application
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate with OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}

      - name: Deploy Database
        run: |
          # Process and apply the database template
          oc process -f Database/openshift.deploy.yml \
            -p TAG=${{ github.event.number || 'latest' }} \
            -p GITHUB_USER=${{ github.repository_owner }} \
            -p APP=task-application \
            | oc apply -f -
          
          # Wait for database deployment
          echo "Waiting for database deployment to be ready..."
          oc wait --for=condition=Available deployment/Task-Application-${{ github.event.number || 'latest' }}-database --timeout=180s || true

      - name: Deploy Backend
        run: |
          # Process and apply the backend template
          oc process -f Backend/openshift.deploy.yml \
            -p TAG=${{ github.event.number || 'latest' }} \
            -p GITHUB_USER=${{ github.repository_owner }} \
            -p APP=task-application \
            | oc apply -f -
