name: OpenShift Sandbox Deployment
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine app name
        if: env.APP_NAME == ''
        run: |
          echo "APP_NAME=$(basename $PWD)" | tee -a $GITHUB_ENV

      - name: Determine image tags
        if: env.IMAGE_TAGS == ''
        run: |
          if [ "${{ github.event.pull_request.number }}" ]; then
            TAG=${{ github.event.pull_request.number }}
          else
            TAG=latest
          fi
          echo "IMAGE_TAGS=${TAG}" | tee -a $GITHUB_ENV


      # Build Database image
      - name: Build Database image
        id: build-database-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ghcr.io/${{ github.repository_owner }}/${{ secrets.APP_NAME }}-database
          tags: ${{ env.IMAGE_TAGS }}
          dockerfiles: |
            ./Database/Dockerfile

      # Build Backend image
      - name: Build Backend image
        id: build-backend-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ghcr.io/${{ github.repository_owner }}/${{ secrets.APP_NAME }}-backend
          tags: ${{ env.IMAGE_TAGS }}
          dockerfiles: |
            ./Backend/Dockerfile

      # Push Database image
      - name: Push Database image to registry
        id: push-database-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-database-image.outputs.image }}
          tags: ${{ steps.build-database-image.outputs.tags }}
          registry: ${{ secrets.IMAGE_REGISTRY }}
          username: ${{ secrets.IMAGE_REGISTRY_USER }}
          password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
          extra-args: --format oci

      # Push Backend image
      - name: Push Backend image to registry
        id: push-backend-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-backend-image.outputs.image }}
          tags: ${{ steps.build-backend-image.outputs.tags }}
          registry: ${{ secrets.IMAGE_REGISTRY }}
          username: ${{ secrets.IMAGE_REGISTRY_USER }}
          password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
          extra-args: --format oci

      - name: Authenticate with OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
      
      - name: Create Image Pull Secret
        run: |
          oc create secret docker-registry github-registry-secret \
            --docker-server=ghcr.io \
            --docker-username=${{ github.repository_owner }} \
            --docker-password=${{ secrets.IMAGE_REGISTRY_PASSWORD }} \
            --docker-email=${{ github.actor }}@users.noreply.github.com \
            -n ${{ secrets.OPENSHIFT_NAMESPACE }} \
            --dry-run=client -o yaml | oc apply -f -
          
          oc secrets link default github-registry-secret --for=pull

      - name: Verify Image Access
        run: |
          oc whoami
          oc registry login
          podman login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.IMAGE_REGISTRY_PASSWORD }}

      - name: Deploy Database
        run: |
          echo "Processing database template..."
          oc process -f Database/openshift.deploy.yml \
            -p TAG=${{ github.event.number }} \
            -p TARGET=${{ github.event.number }} \
            -p GITHUB_USER=${{ github.repository_owner }} \
            -p APP=task-app \
            -p COMPONENT=database \
            | oc apply -f -
          
          echo "Waiting for database deployment..."
          oc wait --for=condition=Available deployment/task-application-database-${GITHUB_SHA::12} --timeout=180s || true

      - name: Deploy Backend

        run: |
          echo "Processing backend template..."
          oc process -f Backend/openshift.deploy.yml \
            -p TAG=${{ github.event.number }} \
            -p GITHUB_USER=${{ github.repository_owner }} \
            -p APP=task-app \
            -p COMPONENT=backend \
            | oc apply -f -
