apiVersion: template.openshift.io/v1
kind: Template
parameters:
  - name: APP
    description: Application name
    value: task-app
  - name: COMPONENT
    description: Component name
    value: database
  - name: GITHUB_USER
    description: GitHub username
    required: true
  - name: TAG
    description: Image tag; e.g. PR number, latest or prod
    required: true
  - name: DB_PASSWORD
    description: Password for the PostgreSQL connection user
    from: '[a-zA-Z0-9]{16}'
    generate: expression
objects:
  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${APP}-${COMPONENT}-${TAG}
      labels:
        app: ${APP}
        component: ${COMPONENT}
        tag: ${TAG}
    stringData:
      database-name: ${APP}
      database-password: ${DB_PASSWORD}
      database-user: postgres
    type: Opaque
 
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: ${APP}
        component: ${COMPONENT}
        tag: ${TAG}
      name: ${APP}-${COMPONENT}-${TAG}
    spec:
      ports:
        - name: postgresql
          port: 5432
          targetPort: 5432
          protocol: TCP
      selector:
        deployment: ${APP}-${COMPONENT}-${TAG}
 
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      labels:
        app: ${APP}
        component: ${COMPONENT}
        tag: ${TAG}
      name: ${APP}-${COMPONENT}-${TAG}
    spec:
      replicas: 1
      selector:
        matchLabels:
          deployment: ${APP}-${COMPONENT}-${TAG}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app: ${APP}
            component: ${COMPONENT}
            tag: ${TAG}
            deployment: ${APP}-${COMPONENT}-${TAG}
        spec:
          imagePullSecrets:
            - name: github-registry-secret
          containers:
            - name: database
              image: 'ghcr.io/${GITHUB_USER}/${APP}-database:${TAG}'
              imagePullPolicy: Always
              env:
                - name: POSTGRES_DB
                  valueFrom:
                    secretKeyRef:
                      name: ${APP}-${COMPONENT}-${TAG}
                      key: database-name
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${APP}-${COMPONENT}-${TAG}
                      key: database-password
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${APP}-${COMPONENT}-${TAG}
                      key: database-user
              ports:
                - containerPort: 5432
                  protocol: TCP
              resources:
                limits:
                  cpu: 200m
                  memory: 256Mi
                requests:
                  cpu: 50m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
                capabilities:
                  drop: ["ALL"]
              volumeMounts:
                - name: postgres-data
                  mountPath: /var/lib/postgresql/data
          volumes:
            - name: postgres-data
              persistentVolumeClaim:
                claimName: ${APP}-${COMPONENT}-${TAG}-pvc
                
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${APP}-${COMPONENT}-${TAG}-pvc
      labels:
        app: ${APP}
        component: ${COMPONENT}
        tag: ${TAG}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
